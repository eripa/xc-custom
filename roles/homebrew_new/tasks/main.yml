---
# installs homebrew system-wide

# but first, let's cleanup the local repo path...
# previous osxc code cloned to ~/src/github.com/mxcl
# but now we want to use ~/src/github.com/Homebrew
- name: check for deprecated repo path
  stat: path={{ old_repo_path }}
  register: old_repo

- name: check for current repo path
  stat: path={{ brew_repo_path }}
  register: new_repo

- name: git clone old repo to new repo path
  # copy and synchronize are soooooo slooooooooooow but git on the other hand...
  git: repo={{ old_repo_path }} dest={{ brew_repo_path }}
  when: new_repo.stat.exists == false and old_repo.stat.exists == true
  register: repo_cloned

# this could probably be a cleaner regexp
- name: update repo remote url
  lineinfile: "dest={{ brew_repo_path }}/.git/config regexp='url' line='        url = {{ git_repo_url }}'"
  when: (new_repo.stat.exists == false and old_repo.stat.exists == true) and repo_cloned|success

# this part is worrisome vs leaving old repo around "just in case"
# ESPECIALLY since we need sudo to ensure anything root owned gets removed
- name: remove old repo
  sudo: True
  file: path={{ old_repo_path | dirname }} state=absent
  when: repo_cloned|success


- name: assert new homebrew installation
  stat: path={{ brew_install_path }}/bin/brew
  ignore_errors: True
  register: brew_installed

- name: clone homebrew if needed
  git: "repo={{ git_repo_url }} dest={{ brew_repo_path }} update=no"
  when: (new_repo.stat.exists == false and old_repo.stat.exists == true) and brew_installed == false

- name: get old {{ brew_install_path }}
  sudo: True
  synchronize: src={{ brew_install_path }} dest={{ brew_repo_path }} copy_links=yes
  when: brew_installed.stat.exists == false

- name: fix user acl on {{ brew_repo_path }}
  sudo: True
  file: path={{ brew_repo_path }} mode=0755 owner={{ ansible_user_id }} group=staff
  when: brew_installed.stat.exists == false

- name: fix user acl on {{ brew_repo_path }}/bin
  sudo: True
  file: path={{ brew_repo_path }}/bin mode=0755 owner={{ ansible_user_id }} group=staff
  when: brew_installed.stat.exists == false

- name: clean up {{ brew_install_path }}
  sudo: True
  file: path={{ brew_install_path }} state=absent
  when: brew_installed.stat.exists == false

# it should always be there and the above code ensures that is is.
# so at this point it's all that's left to do before brew update
- name: ensure {{ brew_repo_path }} is linked to the {{ brew_install_path }}
  sudo: True
  file: state=link src={{ brew_repo_path }} dest={{ brew_install_path }}

- name: update homebrew
  homebrew: update_homebrew=yes
  when: brew_installed.stat.exists == true or repo_cloned|success
