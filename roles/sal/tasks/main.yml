---
# tasks/main.yml


# - include: "user.yml"


# because user module doesn't work on osx
- name: create saluser and salgroup
  sudo: True
  command: /usr/bin/dscl . {{ item }}
  with_items:
    - '-create /Groups/salgroup'
    - '-create /Groups/salgroup PrimaryGroupID "303"'
    - '-create /Users/saluser'
    - '-create /Users/saluser UserShell /bin/bash'
    - '-create /Users/saluser UniqueID "303"'
    - '-create /Users/saluser NFSHomeDirectory {{ sal_env_path }}'
    - '-create /Users/saluser PrimaryGroupID "303"'


# - include: 


- name: git clone sal
  sudo: True
  git: repo=https://github.com/grahamgilbert/sal.git
       dest={{ sal_env_path }}/sal

- name: tweak sal.wsgi if not installing to /usr/local/sal_env
  sudo: True
  lineinfile: dest={{ sal_env_path }}/sal/sal.wsgi
              regexp="^SAL_ENV_DIR"
              line="SAL_ENV_DIR = '{{ sal_env_path }}'"
  when: sal_env_path != '/usr/local/sal_env'

- name: check easy_install exists
  stat: path=/usr/local/bin/pip
  register: pip_exists
 
- name: install pip via easy_install
  sudo: True
  easy_install: name=pip
  when: pip_exists.stat.exists == false

- name: pip install virtualenv 1.10.1
  sudo: True
  pip: name=virtualenv
       version=1.10.1


# - include: settings.yaml


- name: copy example_settings.py
  sudo: True
  copy: src={{ sal_settings_path }}/example_settings.py
        dest={{ sal_settings_path }}/settings.py

#- name: edit settings.py
#  sudo: True
#  lineinfile: dest={{ sal_settings_path }}/settings.py
#              regexp={{ item.regex }}
#              line={{ item.line }}
#  with_items:
#    - { regex: "Your Name"     , line: "('juan', 'juan@ninjabong.com')" }
#    - { regex: "^TIME_ZONE"    , line: "TIMEZONE = '{{ sal_timezone }}'" }
#    - { regex: "^DISPLAY_NAME" , line: "DISPLAY_NAME = {{ sal_display_name }}" }

- name: edit settings.py
  sudo: True
  lineinfile: dest={{ sal_settings_path }}/settings.py
              regexp='Your Name'
              line="     ('{{ ansible_user_id }}', '{{ ansible_user_id }}@{{ ansible_domain }}')"

- name: edit settings.py 2
  sudo: True
  lineinfile: dest={{ sal_settings_path }}/settings.py
              regexp="^TIME_ZONE"
              line="TIME_ZONE = '{{ sal_timezone }}'"

- name: edit settings.py 3
  sudo: True
  lineinfile: dest={{ sal_settings_path }}/settings.py
              regexp="^DISPLAY_NAME"
              line="DISPLAY_NAME = '{{ sal_display_name }}'"


# - include: "venv.yml"


- name: copy virtualenv wrapper
  sudo: True
  template: src=venv_exec.j2
            dest={{ sal_env_path }}/exec
            owner=saluser
            group=salgroup
            mode=0755

- name: pip install sal dependencies
  sudo: True
  pip: requirements={{ sal_env_path }}/sal/setup/requirements.txt
       virtualenv={{ sal_env_path }}
       virtualenv_site_packages=yes

#- name: do some stuff in virtualenv as saluser
#  sudo: True
#  django_manage: command={{ item }}
#                 app_path={{ sal_env_path }}/sal
#                 pythonpath={{ sal_env_path }}/bin/python
#                 virtualenv={{ sal_env_path }}
#  with_items:
#    - "syncdb --noinput"
#    - "createsuperuser --username {{ sal_db_admin }} --email {{ sal_db_email }} --noinput"
#    - "changepassword {{ sal_db_admin }}"
#    - "migrate"
#    - "collectstatic --noinput"

- name: do some stuff in virtualenv as saluser
  sudo: True
  command: "{{ sal_env_path }}/exec python {{ sal_env_path }}/sal/manage.py {{ item }}"
  with_items:
    - "syncdb --noinput"
    - "createsuperuser --username {{ sal_db_admin }} --email {{ sal_db_email }} --noinput"
    - "changepassword {{ sal_db_admin }} {{ sal_db_pass }}"
    - "migrate"
    - "collectstatic --noinput"

- name: ensure permissions of sal_env
  sudo: True
  file: path={{ sal_env_path }}
        owner=saluser
        group=salgroup 
        state=directory
        recurse=yes


# - include: "wsgi.yml"


# doesn't work on osx
#- name: enable apache2's wsgi module
#  apache2_module: name=wsgi state=present

- name: pip install mod_wsgi
  sudo: True
  pip: name=mod_wsgi

- name: copy mod_wsgi to apache2 module's dir
  sudo: True
  copy: src=/Library/Python/2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so
        dest=/usr/libexec/apache2/mod_wsgi.so
        owner=root
        group=wheel
        mode=0755

- name: enable mod_wsgi module
  sudo: True
  lineinfile: dest=/private/etc/apache2/httpd.conf
              insertafter='LoadModule hfs_apple_module'
              line='LoadModule wsgi_module libexec/apache2/mod_wsgi.so'

- name: copy vhost template for apache2
  sudo: True
  template: src=sal_vhost.j2
            dest=/private/etc/apache2/other/sal.conf
            owner=root
            group=wheel
            mode=0644

# make this a handler
- name: (re)start apache2
  sudo: True
  command: /usr/sbin/apachectl restart
